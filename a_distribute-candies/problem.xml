<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="7" short-name="distribute-candies" url="https://polygon.codeforces.com/p4yxTtC/chromate00/distribute-candies">
    <names>
        <name language="korean" value="사탕 나눠주기"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/korean/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/.html/korean/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>2000</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>33</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test group="1" method="manual" points="0.0" sample="true"/>
                <test group="1" method="manual" points="0.0" sample="true"/>
                <test cmd="gen_yes 30" group="1" method="generated" points="0.0"/>
                <test cmd="gen_rand 30" group="1" method="generated" points="0.0"/>
                <test cmd="gen_yes 50" group="1" method="generated" points="0.0"/>
                <test cmd="gen_rand 50" group="1" method="generated" points="0.0"/>
                <test cmd="gen_yes 100" group="1" method="generated" points="0.0"/>
                <test cmd="gen_rand 100" group="1" method="generated" points="19.0"/>
                <test group="1" method="manual" points="0.0"/>
                <test group="1" method="manual" points="0.0"/>
                <test group="1" method="manual" points="0.0"/>
                <test cmd="gen_yes 300" group="2" method="generated" points="0.0"/>
                <test cmd="gen_rand 300" group="2" method="generated" points="0.0"/>
                <test cmd="gen_yes 500" group="2" method="generated" points="0.0"/>
                <test cmd="gen_rand 500" group="2" method="generated" points="0.0"/>
                <test cmd="gen_yes 1000" group="2" method="generated" points="0.0"/>
                <test cmd="gen_rand 1000" group="2" method="generated" points="0.0"/>
                <test cmd="gen_yes 2000" group="2" method="generated" points="0.0"/>
                <test cmd="gen_rand 2000" group="2" method="generated" points="0.0"/>
                <test cmd="gen_yes 3000" group="2" method="generated" points="0.0"/>
                <test cmd="gen_rand 3000" group="2" method="generated" points="37.0"/>
                <test cmd="gen_yes 5000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 5000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_yes 10000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 10000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_yes 20000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 20000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_yes 30000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 30000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_yes 50000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 50000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_yes 100000" group="3" method="generated" points="0.0"/>
                <test cmd="gen_rand 100000" group="3" method="generated" points="44.0"/>
            </tests>
            <groups>
                <group feedback-policy="points" name="1" points-policy="each-test"/>
                <group feedback-policy="points" name="2" points-policy="each-test"/>
                <group feedback-policy="points" name="3" points-policy="each-test"/>
            </groups>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statement_distribute-candies.md"/>
            <file path="files/statements.ftl"/>
            <file path="files/subtask_allocation.txt"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen_rand.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </executable>
            <executable>
                <source path="files/gen_yes.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </executable>
            <executable>
                <source path="files/vald.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::wcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/vald.cpp" type="cpp.gcc14-64-msys2-g++23"/>
                <testset>
                    <test-count>0</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests/>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="main">
                <source path="solutions/mcs.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/py_sort.cpp" type="python.pypy3-64"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/solution.py" type="python.3"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/solution2.py" type="python.3"/>
            </solution>
            <solution tag="rejected">
                <source path="solutions/wa1.py" type="python.3"/>
            </solution>
            <solution tag="rejected">
                <source path="solutions/wa2.py" type="python.3"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
    <tags>
        <tag value="implementation"/>
    </tags>
</problem>
